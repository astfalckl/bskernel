[{"path":"https://astfalckl.github.io/bskernel/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Lachlan Astfalck Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://astfalckl.github.io/bskernel/articles/ml_gaussian.html","id":"simulate-a-gaussian-process-with-known-autocovariance","dir":"Articles","previous_headings":"","what":"Simulate a Gaussian process with known autocovariance","title":"ML with Gaussian Likelihood","text":"standard; lean package SuperGauss efficiently sample GP set fft = FALSE sample exact draw.","code":"library(bskernel) library(dplyr) library(SuperGauss)  matern32_cov <- function(d, range, sigma2) {   sqrt3_d <- sqrt(3) * d / range   sigma2 * (1 + sqrt3_d) * exp(-sqrt3_d) }  n <- 2000 n_knots <- 4 range <- 2 k <- 1 b <- 0.1  tau <- 0:(n - 1) mat32_acf <- matern32_cov(tau, range, sigma2 = 1)  y <- SuperGauss::rnormtz(n = 1, mat32_acf, fft = FALSE)"},{"path":"https://astfalckl.github.io/bskernel/articles/ml_gaussian.html","id":"estimate-the-acf-using-spline-kernels","dir":"Articles","previous_headings":"","what":"Estimate the ACF using spline kernels","title":"ML with Gaussian Likelihood","text":"couple things note . First, data sampled regularly spacing 1, Nyquist frequency 0.5. extend knot spacing past using linear basis. first knot, creating symmetry 0. Next, optim_toeplitz_mle optimising log space parameters, hence must exponentiate optimiser output. Constraining parameters positive like sufficient necessary condition yield positive semi-definite estimate. Finally, easiest way symmetrise bases defined knots just take real values. plot estimated vs true ACF given .","code":"knots <- c(-0.05, 0, 0.05, 0.1, 0.2, 0.3, 0.5, 0.7) c_init <- c(0.3, 0.2, 0.15, 0.15, 0.1, 0.1)  log_c_mle <- optim_toeplitz_mle(c_init, knots, k, y)$par c_mle <- exp(log_c_mle) acf_est <- reconstruct_acf(c_mle, knots, k, tau) %>% Re()"},{"path":"https://astfalckl.github.io/bskernel/articles/ml_gaussian.html","id":"gradient-of-the-toeplitz-representation","dir":"Articles","previous_headings":"","what":"Gradient of the Toeplitz Representation","title":"ML with Gaussian Likelihood","text":"Warning: mathematical details required run code. optimisation runs efficiently part baked gradient using Toeplitz representation likelihood. See compute_toeplitz_loglik_grad want unpack . Let \\(\\mathbf{y} \\\\mathbb{R}^n\\) zero-mean stationary Gaussian process Toeplitz covariance matrix \\[ \\Sigma = T(\\boldsymbol{\\rho}) \\] \\(T(\\boldsymbol{\\rho})\\) symmetric Toeplitz matrix defined autocovariance vector \\(\\boldsymbol{\\rho} = (\\rho_0, \\rho_1, \\dots, \\rho_{n-1})\\). model autocovariance entry \\[ \\rho_\\tau = \\sum_{=0}^{m-1} c_i \\, \\phi_i(\\tau) \\] \\(c_i\\) coefficients, \\(\\phi_i(\\tau)\\) inverse Fourier transform \\(\\)-th B-spline spectral basis function (eqn 5 paper). log-likelihood \\[ \\ell(\\mathbf{c}) = -\\frac{1}{2} \\left[ n \\log(2\\pi) + \\log |\\Sigma(\\mathbf{c})| + \\mathbf{y}^\\top \\Sigma(\\mathbf{c})^{-1} \\mathbf{y} \\right]. \\] Apply chain rule, \\[ \\frac{\\partial \\ell}{\\partial c_i} = \\sum_{\\tau=0}^{n-1} \\frac{\\partial \\ell}{\\partial \\rho_\\tau} \\cdot \\frac{\\partial \\rho_\\tau}{\\partial c_i}. \\] standard matrix calculus, \\[ \\frac{\\partial \\ell}{\\partial \\rho_\\tau} = \\frac{1}{2} \\left[ \\mathbf{y}^\\top \\Sigma^{-1} J^\\tau \\Sigma^{-1} \\mathbf{y} - \\operatorname{tr}(\\Sigma^{-1} J^\\tau) \\right] \\] \\(J^\\tau\\) Toeplitz matrix 1s \\(\\tau\\)-th (symmetric) -diagonal, 0 elsewhere. practice, efficiently handled SuperGauss::NormalToeplitz class. Since, \\[ \\rho_\\tau = \\sum_i c_i \\, \\phi_i(\\tau) \\quad \\Rightarrow \\quad \\frac{\\partial \\rho_\\tau}{\\partial c_i} = \\phi_i(\\tau), \\] Jacobian \\(\\partial \\boldsymbol{\\rho} / \\partial \\mathbf{c} \\\\mathbb{R}^{n \\times K}\\) entries \\[ \\left[ \\frac{\\partial \\boldsymbol{\\rho}}{\\partial \\mathbf{c}} \\right]_{\\tau,} = \\phi_i(\\tau). \\] Putting together, \\[ \\nabla_{\\mathbf{c}} \\ell(\\mathbf{c}) = \\left( \\frac{\\partial \\ell}{\\partial \\boldsymbol{\\rho}} \\right)^\\top \\cdot \\left( \\frac{\\partial \\boldsymbol{\\rho}}{\\partial \\mathbf{c}} \\right). \\] code, SuperGauss handles beautifully Lastly, optimise log-parameters \\(\\theta_i = \\log c_i\\), chain rule gives \\[ \\frac{\\partial \\ell}{\\partial \\theta_i} = \\frac{\\partial \\ell}{\\partial c_i} \\cdot \\frac{\\partial c_i}{\\partial \\theta_i} = \\frac{\\partial \\ell}{\\partial c_i} \\cdot c_i \\] code,","code":"grad <- nt$grad(z = y, dz = matrix(0, n, n_basis), acf = rho, dacf = dacf) grad_theta <- grad * c"},{"path":"https://astfalckl.github.io/bskernel/articles/ml_whittle.html","id":"simulate-a-gaussian-process-with-known-autocovariance","dir":"Articles","previous_headings":"","what":"Simulate a Gaussian process with known autocovariance","title":"ML with Whittle Likelihood","text":"standard; lean package SuperGauss efficiently sample GP set fft = FALSE sample exact draw. calculate periodogram, note ’s values double going consider folded periodogram positive frequencies, drop 0th frequency element behave well Whittle’s likelihood.","code":"library(bskernel) library(dplyr) library(SuperGauss) library(speccy)  matern32_cov <- function(d, range, sigma2) {   sqrt3_d <- sqrt(3) * d / range   sigma2 * (1 + sqrt3_d) * exp(-sqrt3_d) }  n <- 2000 n_knots <- 4 range <- 2 k <- 1 b <- 0.1  tau <- 0:(n - 1) mat32_acf <- matern32_cov(tau, range, sigma2 = 1)  y <- SuperGauss::rnormtz(n = 1, mat32_acf, fft = FALSE)  I <- 2 * speccy::periodogram(y)$estimate[-1] omegas <- speccy::periodogram(y)$ff[-1]"},{"path":"https://astfalckl.github.io/bskernel/articles/ml_whittle.html","id":"estimate-the-acf-using-whittles-likelihood","dir":"Articles","previous_headings":"","what":"Estimate the ACF using Whittle’s likelihood","title":"ML with Whittle Likelihood","text":"runs similar Gaussian likelihood case, except, now, optimising bases Fourier domain directly. potentially odd thing note basis matrix formed, effectively, ’m folding negative frequencies positive, going fit positive frequencies.","code":"knots <- c(-0.05, 0, 0.05, 0.1, 0.2, 0.3, 0.5, 0.7) c_init <- c(0.3, 0.2, 0.15, 0.15, 0.1, 0.1)  B_pos <- build_bspline_design_matrix(omegas, knots = knots, k = k) B_neg <- build_bspline_design_matrix(-omegas, knots = knots, k = k) B <- B_pos + B_neg  c_whittle <- optim_whittle(omegas, I, B, c0 = c_init)$c acf_est <- Re(reconstruct_acf(c_whittle, knots, k, tau))"},{"path":"https://astfalckl.github.io/bskernel/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lachlan Astfalck. Author, maintainer.","code":""},{"path":"https://astfalckl.github.io/bskernel/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Astfalck L (2025). “Universal modelling auto-covariance functions via spline kernels.” arXiv:2506.21953.","code":"@Article{,   title = {Universal modelling of auto-covariance functions via spline kernels},   author = {Lachlan Astfalck},   journal = {arXiv:2506.21953},   year = {2025}, }"},{"path":"https://astfalckl.github.io/bskernel/index.html","id":"bskernel","dir":"","previous_headings":"","what":"Flexible Auto-covariance Construction via Spline Kernels","title":"Flexible Auto-covariance Construction via Spline Kernels","text":"package provides flexible auto-covariance kernel construction via inverse Fourier transforms B-spline bases, well handy tools optimisation. Please note, found GitHub repo, please navigate pkgdown page.","code":""},{"path":"https://astfalckl.github.io/bskernel/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Flexible Auto-covariance Construction via Spline Kernels","text":"can install development version bskernel GitHub ","code":"devtools::install_github(\"astfalckl/bskernel\")"},{"path":"https://astfalckl.github.io/bskernel/index.html","id":"quickstart","dir":"","previous_headings":"","what":"Quickstart","title":"Flexible Auto-covariance Construction via Spline Kernels","text":"bskernel package provides tools constructing auto-covariance functions via inverse Fourier transform B-spline basis functions spectral domain. workhorse functions build_bspline_design_matrix reconstruct_acf minimal example recreates Figure 1 paper. Note reconstruct_acf() designed summate bases expansion, iteratively select basis member. spline acf bases plotted (plotting code suppressed, see .Rmd file).","code":"library(bskernel)  k <- 1  knots <- seq(-0.125, 0.5, 0.125) omega <- seq(0, 0.5, length.out = 100) tau <- seq(0, 7.5, length = 100)  spline_bases <- build_bspline_design_matrix(omega, knots, k)  acfs <- sapply(1:4, function(i){   idx <- rep(0, 4)   idx[i] <- 1   Re(reconstruct_acf(idx, knots, k, tau)) })"},{"path":"https://astfalckl.github.io/bskernel/index.html","id":"articles","dir":"","previous_headings":"","what":"Articles","title":"Flexible Auto-covariance Construction via Spline Kernels","text":"written number tutorials: Maximum Likelihood Gaussian Likelihood Maximum Likelihood Whittle’s Likelihood Function reference can found Function reference","code":""},{"path":"https://astfalckl.github.io/bskernel/index.html","id":"citation","dir":"","previous_headings":"Articles","what":"Citation","title":"Flexible Auto-covariance Construction via Spline Kernels","text":"package accompanies paper LC Astfalck. (2025). ‘’Universal modelling auto-covariance functions via spline kernels’’. Submitted Journal Royal Statistical Society: Series B. [Available .]","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bskernel-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bskernel: Flexible Auto-covariance Construction via Spline Kernels — bskernel-package","title":"bskernel: Flexible Auto-covariance Construction via Spline Kernels — bskernel-package","text":"package provides flexible auto-covariance kernel construction via inverse Fourier transforms B-spline bases, well handy tools optimisation. accompanies paper ''Universal approximation auto-covariance functions via spline kernels''.","code":""},{"path":[]},{"path":"https://astfalckl.github.io/bskernel/reference/bskernel-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bskernel: Flexible Auto-covariance Construction via Spline Kernels — bskernel-package","text":"Maintainer: Lachlan Astfalck lachlan.astfalck@uwa.edu.au (ORCID)","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_alpha_rule.html","id":null,"dir":"Reference","previous_headings":"","what":"Alpha Coefficients for Truncated Power Expansion of B-spline Basis — bspline_alpha_rule","title":"Alpha Coefficients for Truncated Power Expansion of B-spline Basis — bspline_alpha_rule","text":"Computes coefficients \\(\\alpha_j\\) truncated power representation B-spline basis function degree k, valid k = 0, 1, 2. coefficients allow basis function expressed linear combination truncated power functions relevant knot interval.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_alpha_rule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alpha Coefficients for Truncated Power Expansion of B-spline Basis — bspline_alpha_rule","text":"","code":"bspline_alpha_rule(knots, i, k)"},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_alpha_rule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alpha Coefficients for Truncated Power Expansion of B-spline Basis — bspline_alpha_rule","text":"knots numeric vector knots. integer index indicating position knot sequence compute coefficients. k degree B-spline basis function (must 0, 1, 2).","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_alpha_rule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alpha Coefficients for Truncated Power Expansion of B-spline Basis — bspline_alpha_rule","text":"numeric vector coefficients \\(\\alpha_j\\) truncated power expansion.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_alpha_rule.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alpha Coefficients for Truncated Power Expansion of B-spline Basis — bspline_alpha_rule","text":": k = 0, returns \\((1, -1)\\) characteristic function single interval. k = 1, returns 3-vector corresponding linear B-spline basis functions. k = 2, returns 4-vector quadratic B-spline basis functions. function throws error required knot difference zero (.e. repeated knots), k > 2.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_alpha_rule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alpha Coefficients for Truncated Power Expansion of B-spline Basis — bspline_alpha_rule","text":"","code":"knots <- c(0, 1, 2, 3, 4, 5) bspline_alpha_rule(knots, i = 1, k = 1) #> [1]  1 -2  1"},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_normalisation_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalisation Constant for Truncated Power Expansion of B-spline — bspline_normalisation_constant","title":"Normalisation Constant for Truncated Power Expansion of B-spline — bspline_normalisation_constant","text":"Computes scaling factor required normalise B-spline basis function, using truncated power expansion, basis integrates 1 support.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_normalisation_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalisation Constant for Truncated Power Expansion of B-spline — bspline_normalisation_constant","text":"","code":"bspline_normalisation_constant(knots, i, k)"},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_normalisation_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalisation Constant for Truncated Power Expansion of B-spline — bspline_normalisation_constant","text":"knots numeric vector knots. integer index indicating position knot sequence compute coefficients. k degree B-spline basis function (must 0, 1, 2).","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_normalisation_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalisation Constant for Truncated Power Expansion of B-spline — bspline_normalisation_constant","text":"numeric scalar giving inverse integral truncated power representation - .e., multiplicative constant \\(Z^{-1}\\) makes basis function integrate 1.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_normalisation_constant.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalisation Constant for Truncated Power Expansion of B-spline — bspline_normalisation_constant","text":"function uses bspline_alpha_rule compute coefficients \\(\\alpha_j\\) truncated power expansion, integrates support.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_normalisation_constant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalisation Constant for Truncated Power Expansion of B-spline — bspline_normalisation_constant","text":"","code":"knots <- c(0, 1, 2, 3, 4, 5) bspline_normalisation_constant(knots, i = 1, k = 1) #> [1] 1"},{"path":"https://astfalckl.github.io/bskernel/reference/build_bspline_design_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a B-spline Design Matrix — build_bspline_design_matrix","title":"Construct a B-spline Design Matrix — build_bspline_design_matrix","text":"Builds B-spline basis matrix evaluating normalised truncated power B-spline basis function input locations omega. column matrix corresponds one basis function.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/build_bspline_design_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a B-spline Design Matrix — build_bspline_design_matrix","text":"","code":"build_bspline_design_matrix(omega, knots, k)"},{"path":"https://astfalckl.github.io/bskernel/reference/build_bspline_design_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a B-spline Design Matrix — build_bspline_design_matrix","text":"omega numeric vector input locations evaluate basis function. knots numeric vector knots. k degree B-spline basis function (must 0, 1, 2).","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/build_bspline_design_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a B-spline Design Matrix — build_bspline_design_matrix","text":"numeric matrix length(omega) rows length(knots) - k - 1 columns, column normalised B-spline basis function evaluated omega.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/build_bspline_design_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct a B-spline Design Matrix — build_bspline_design_matrix","text":"number basis functions given length(knots) - k - 1. column matrix computed using evaluate_bspline_basis.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/build_bspline_design_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a B-spline Design Matrix — build_bspline_design_matrix","text":"","code":"knots <- c(0, 1, 2, 3, 4, 5) omega <- seq(0, 5, length.out = 100) B <- build_bspline_design_matrix(omega, knots, k = 1) matplot(omega, B, type = \"l\", lty = 1, col = 1:ncol(B))"},{"path":"https://astfalckl.github.io/bskernel/reference/compute_toeplitz_loglik.html","id":null,"dir":"Reference","previous_headings":"","what":"Log-Likelihood under Toeplitz Gaussian Model — compute_toeplitz_loglik","title":"Log-Likelihood under Toeplitz Gaussian Model — compute_toeplitz_loglik","text":"Computes exact log-likelihood univariate process y Gaussian process model autocovariance structure derived B-spline spectral basis. autocovariance function reconstructed used define Toeplitz covariance matrix, enabling efficient log-likelihood computation.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/compute_toeplitz_loglik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Log-Likelihood under Toeplitz Gaussian Model — compute_toeplitz_loglik","text":"","code":"compute_toeplitz_loglik(y, c, knots, k)"},{"path":"https://astfalckl.github.io/bskernel/reference/compute_toeplitz_loglik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Log-Likelihood under Toeplitz Gaussian Model — compute_toeplitz_loglik","text":"y numeric vector representing observed time series. c numeric vector coefficients ACF basis functions. knots numeric vector knot locations defining B-spline basis. k degree B-spline basis functions (, 0, 1, 2).","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/compute_toeplitz_loglik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Log-Likelihood under Toeplitz Gaussian Model — compute_toeplitz_loglik","text":"numeric scalar: log-likelihood data implied Toeplitz covariance model.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/compute_toeplitz_loglik.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Log-Likelihood under Toeplitz Gaussian Model — compute_toeplitz_loglik","text":"autocovariance function reconstructed using reconstruct_acf passed SuperGauss::NormalToeplitz class efficient evaluation Gaussian likelihood Toeplitz structure. method avoids explicit matrix inversion well-suited large univariate processes.","code":""},{"path":[]},{"path":"https://astfalckl.github.io/bskernel/reference/compute_toeplitz_loglik.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Log-Likelihood under Toeplitz Gaussian Model — compute_toeplitz_loglik","text":"","code":"knots <- seq(0, 0.5, length.out = 6) k <- 1 c <- rep(1, length(knots) - k - 1) y <- arima.sim(n = 100, model = list(ar = 0.8)) compute_toeplitz_loglik(y, c, knots, k) #> [1] -306.6364"},{"path":"https://astfalckl.github.io/bskernel/reference/compute_toeplitz_loglik_grad.html","id":null,"dir":"Reference","previous_headings":"","what":"Gradient of Toeplitz Log-Likelihood — compute_toeplitz_loglik_grad","title":"Gradient of Toeplitz Log-Likelihood — compute_toeplitz_loglik_grad","text":"Computes gradient Gaussian log-likelihood univariate process model autocovariance structure defined via B-spline basis functions, either respect coefficients logarithms.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/compute_toeplitz_loglik_grad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gradient of Toeplitz Log-Likelihood — compute_toeplitz_loglik_grad","text":"","code":"compute_toeplitz_loglik_grad(y, c, knots, k, log_coef = TRUE)"},{"path":"https://astfalckl.github.io/bskernel/reference/compute_toeplitz_loglik_grad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gradient of Toeplitz Log-Likelihood — compute_toeplitz_loglik_grad","text":"y numeric vector representing observed time series. c numeric vector spectral coefficients. knots numeric vector knot locations defining B-spline basis. k degree B-spline basis functions. log_coef Logical; TRUE (default), returns gradient respect log(c).","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/compute_toeplitz_loglik_grad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gradient of Toeplitz Log-Likelihood — compute_toeplitz_loglik_grad","text":"numeric vector: gradient log-likelihood respect c log(c).","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/compute_toeplitz_loglik_grad.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Gradient of Toeplitz Log-Likelihood — compute_toeplitz_loglik_grad","text":"log_coef = TRUE, function returns gradient respect log-transformed spectral coefficients \\(\\theta = \\log(c)\\), applying chain rule. useful optimization unconstrained parameter space. log_coef = FALSE, returns gradient respect original coefficients c.","code":""},{"path":[]},{"path":"https://astfalckl.github.io/bskernel/reference/evaluate_bspline_basis.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a Normalised B-spline Basis Function — evaluate_bspline_basis","title":"Evaluate a Normalised B-spline Basis Function — evaluate_bspline_basis","text":"Evaluates B-spline basis function degree k, indexed , vector input locations omega, using truncated power expansion. result scaled basis integrates 1 support.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/evaluate_bspline_basis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a Normalised B-spline Basis Function — evaluate_bspline_basis","text":"","code":"evaluate_bspline_basis(omega, knots, i, k)"},{"path":"https://astfalckl.github.io/bskernel/reference/evaluate_bspline_basis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a Normalised B-spline Basis Function — evaluate_bspline_basis","text":"omega numeric vector input locations evaluate basis function. knots numeric vector knots. integer index indicating position knot sequence compute coefficients. k degree B-spline basis function (must 0, 1, 2).","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/evaluate_bspline_basis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate a Normalised B-spline Basis Function — evaluate_bspline_basis","text":"numeric vector length omega, giving evaluated basis function values.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/evaluate_bspline_basis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate a Normalised B-spline Basis Function — evaluate_bspline_basis","text":"","code":"knots <- c(0, 1, 2, 3, 4, 5) omega <- seq(0, 5, length.out = 100) y <- evaluate_bspline_basis(omega, knots, i = 1, k = 1) plot(omega, y, type = \"l\")"},{"path":"https://astfalckl.github.io/bskernel/reference/inverse_fourier_truncated_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse Fourier Transform of a B-spline Basis Function — inverse_fourier_truncated_power","title":"Inverse Fourier Transform of a B-spline Basis Function — inverse_fourier_truncated_power","text":"Computes inverse Fourier transform B-spline basis function degree k, indexed , using truncated power expansion representation. used construct spectral representations B-spline basis functions.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/inverse_fourier_truncated_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse Fourier Transform of a B-spline Basis Function — inverse_fourier_truncated_power","text":"","code":"inverse_fourier_truncated_power(knots, i, k, tau)"},{"path":"https://astfalckl.github.io/bskernel/reference/inverse_fourier_truncated_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse Fourier Transform of a B-spline Basis Function — inverse_fourier_truncated_power","text":"knots numeric vector knots. integer index indicating position knot sequence compute coefficients. k degree B-spline basis function (must 0, 1, 2). tau numeric vector frequencies evaluate inverse Fourier transform.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/inverse_fourier_truncated_power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse Fourier Transform of a B-spline Basis Function — inverse_fourier_truncated_power","text":"complex-valued vector length tau, giving inverse Fourier transform basis function evaluated frequency.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/inverse_fourier_truncated_power.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inverse Fourier Transform of a B-spline Basis Function — inverse_fourier_truncated_power","text":"","code":"knots <- c(0, 1, 2, 3, 4, 5) tau <- seq(-5, 5, length.out = 200) rho <- inverse_fourier_truncated_power(knots, i = 1, k = 1, tau = tau) plot(tau, Re(rho), type = \"l\", main = \"Real part of Fourier transform\")"},{"path":"https://astfalckl.github.io/bskernel/reference/logbp.html","id":null,"dir":"Reference","previous_headings":"","what":"Offset Logarithm Transform — logbp","title":"Offset Logarithm Transform — logbp","text":"Computes log-transformation x small positive bias b, optional logarithmic base.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/logbp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Offset Logarithm Transform — logbp","text":"","code":"logbp(x, b = 1e-06, base = 10^1)"},{"path":"https://astfalckl.github.io/bskernel/reference/logbp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Offset Logarithm Transform — logbp","text":"x numeric vector matrix values transform. b small positive offset added x applying logarithm. Defaults 1e-6. base base logarithm. Defaults 10.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/logbp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Offset Logarithm Transform — logbp","text":"numeric vector matrix log-transformed values.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/logbp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Offset Logarithm Transform — logbp","text":"","code":"logbp(1:10) #>  [1] 4.342943e-07 3.010302e-01 4.771214e-01 6.020601e-01 6.989701e-01 #>  [6] 7.781513e-01 8.450981e-01 9.030900e-01 9.542426e-01 1.000000e+00 logbp(0, b = 1e-4) #> [1] -4 logbp(c(0.1, 1, 10), base = exp(1)) #> [1] -2.302575e+00  9.999995e-07  2.302585e+00"},{"path":"https://astfalckl.github.io/bskernel/reference/optim_toeplitz_mle.html","id":null,"dir":"Reference","previous_headings":"","what":"Maximum Likelihood Estimation via Toeplitz Gaussian Likelihood — optim_toeplitz_mle","title":"Maximum Likelihood Estimation via Toeplitz Gaussian Likelihood — optim_toeplitz_mle","text":"Estimates spectral basis coefficients maximize Gaussian log-likelihood univariate time series autocovariance structure modeled B-spline basis functions.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/optim_toeplitz_mle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Maximum Likelihood Estimation via Toeplitz Gaussian Likelihood — optim_toeplitz_mle","text":"","code":"optim_toeplitz_mle(c_init, knots, k, y)"},{"path":"https://astfalckl.github.io/bskernel/reference/optim_toeplitz_mle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Maximum Likelihood Estimation via Toeplitz Gaussian Likelihood — optim_toeplitz_mle","text":"c_init numeric vector positive initial values coefficients. knots numeric vector knot locations defining B-spline basis. k degree B-spline basis functions. y numeric vector representing observed time series.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/optim_toeplitz_mle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Maximum Likelihood Estimation via Toeplitz Gaussian Likelihood — optim_toeplitz_mle","text":"object class optim, containing MLE estimates (log scale), convergence diagnostics, gradient information.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/optim_toeplitz_mle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Maximum Likelihood Estimation via Toeplitz Gaussian Likelihood — optim_toeplitz_mle","text":"function uses optim BFGS method maximize log-likelihood Gaussian process model Toeplitz covariance matrix, using compute_toeplitz_loglik compute_toeplitz_loglik_grad. optimization unconstrained reparameterizing c log scale. final estimates (log-scale) returned $par, can transformed back via exp(result$par).","code":""},{"path":[]},{"path":"https://astfalckl.github.io/bskernel/reference/optim_whittle.html","id":null,"dir":"Reference","previous_headings":"","what":"Optimize Whittle Likelihood — optim_whittle","title":"Optimize Whittle Likelihood — optim_whittle","text":"Fits spline coefficients minimizing negative Whittle log-likelihood.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/optim_whittle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Optimize Whittle Likelihood — optim_whittle","text":"","code":"optim_whittle(omega, periodogram, B, c0 = NULL)"},{"path":"https://astfalckl.github.io/bskernel/reference/optim_whittle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Optimize Whittle Likelihood — optim_whittle","text":"omega Vector frequencies. periodogram Vector periodogram values. B Design matrix (rows = frequencies, cols = basis functions). c0 Optional starting values coefficients. Defaults 0.1 basis.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/optim_whittle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Optimize Whittle Likelihood — optim_whittle","text":"list containing: c estimated coefficient vector. fitted fitted spectral density values frequency. optim full output optim.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/plot_bspline_basis_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot B-spline Basis Functions Using ggplot2 — plot_bspline_basis_ggplot","title":"Plot B-spline Basis Functions Using ggplot2 — plot_bspline_basis_ggplot","text":"Plots B-spline design matrix using ggplot2, optionally applying log scales x y axes. column matrix treated separate basis function.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/plot_bspline_basis_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot B-spline Basis Functions Using ggplot2 — plot_bspline_basis_ggplot","text":"","code":"plot_bspline_basis_ggplot(   omega,   design_matrix,   k = NULL,   logx = FALSE,   logy = FALSE )"},{"path":"https://astfalckl.github.io/bskernel/reference/plot_bspline_basis_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot B-spline Basis Functions Using ggplot2 — plot_bspline_basis_ggplot","text":"omega numeric vector input values basis evaluated. design_matrix numeric matrix (rows = length omega, columns = basis functions). k (Optional) degree B-spline basis. Used labelling. logx Logical; TRUE, plot x-axis log10 scale. logy Logical; TRUE, plot y-axis log10 scale.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/plot_bspline_basis_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot B-spline Basis Functions Using ggplot2 — plot_bspline_basis_ggplot","text":"ggplot object displaying basis function line.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/reconstruct_acf.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct the Autocovariance Function (ACF) from Spectral Coefficients — reconstruct_acf","title":"Reconstruct the Autocovariance Function (ACF) from Spectral Coefficients — reconstruct_acf","text":"Given set spectral coefficients B-spline basis, function reconstructs autocovariance function via inverse Fourier transform.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/reconstruct_acf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct the Autocovariance Function (ACF) from Spectral Coefficients — reconstruct_acf","text":"","code":"reconstruct_acf(c, knots, k, tau)"},{"path":"https://astfalckl.github.io/bskernel/reference/reconstruct_acf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct the Autocovariance Function (ACF) from Spectral Coefficients — reconstruct_acf","text":"c numeric vector spectral coefficients (length equals number basis functions). knots numeric vector knots. k degree B-spline basis function (must 0, 1, 2). tau numeric vector frequencies evaluate inverse Fourier transform.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/reconstruct_acf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct the Autocovariance Function (ACF) from Spectral Coefficients — reconstruct_acf","text":"real-valued numeric vector length tau, representing reconstructed autocovariance.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/reconstruct_acf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reconstruct the Autocovariance Function (ACF) from Spectral Coefficients — reconstruct_acf","text":"function computes weighted sum inverse Fourier transforms B-spline basis functions. zero-lag autocovariance (tau[1]) manually set total spectral mass sum(c), ensuring numerical consistency.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/reconstruct_acf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reconstruct the Autocovariance Function (ACF) from Spectral Coefficients — reconstruct_acf","text":"","code":"knots <- c(0, 1, 2, 3, 4, 5) c <- c(1, 0.5, 0.2) tau <- seq(0, 10, length.out = 200) acf <- reconstruct_acf(c, knots, k = 1, tau = tau) plot(tau, acf, type = \"l\") #> Warning: imaginary parts discarded in coercion"},{"path":"https://astfalckl.github.io/bskernel/reference/truncated_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Truncated Power Function — truncated_power","title":"Truncated Power Function — truncated_power","text":"Computes truncated power basis function \\((x - \\kappa)^k_+\\), zero values x < kappa equal \\((x - \\kappa)^k_+\\) otherwise. Commonly used spline basis construction.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/truncated_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Truncated Power Function — truncated_power","text":"","code":"truncated_power(x, kappa, k)"},{"path":"https://astfalckl.github.io/bskernel/reference/truncated_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Truncated Power Function — truncated_power","text":"x numeric vector input values. kappa numeric scalar specifying truncation point. k non-negative integer specifying exponent.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/truncated_power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Truncated Power Function — truncated_power","text":"numeric vector length x, element transformed truncated power function.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/truncated_power.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Truncated Power Function — truncated_power","text":"","code":"x <- seq(0, 2, by = 0.1) truncated_power(x, kappa = 1, k = 2) #>  [1] 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.01 0.04 0.09 0.16 #> [16] 0.25 0.36 0.49 0.64 0.81 1.00"},{"path":"https://astfalckl.github.io/bskernel/reference/whittle_loglik.html","id":null,"dir":"Reference","previous_headings":"","what":"Whittle Log-Likelihood Objective — whittle_loglik","title":"Whittle Log-Likelihood Objective — whittle_loglik","text":"Computes negative Whittle log-likelihood given coefficient vector.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/whittle_loglik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Whittle Log-Likelihood Objective — whittle_loglik","text":"","code":"whittle_loglik(c, B, periodogram)"},{"path":"https://astfalckl.github.io/bskernel/reference/whittle_loglik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Whittle Log-Likelihood Objective — whittle_loglik","text":"c Coefficient vector spectral basis expansion. B Design matrix (rows = frequencies, cols = basis functions). Easiest use output build_bspline_design_matrix periodogram Vector periodogram values.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/whittle_loglik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Whittle Log-Likelihood Objective — whittle_loglik","text":"scalar value: negative Whittle log-likelihood.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/whittle_loglik_grad.html","id":null,"dir":"Reference","previous_headings":"","what":"Gradient of Whittle Log-Likelihood — whittle_loglik_grad","title":"Gradient of Whittle Log-Likelihood — whittle_loglik_grad","text":"Computes gradient negative Whittle log-likelihood respect coefficients.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/whittle_loglik_grad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gradient of Whittle Log-Likelihood — whittle_loglik_grad","text":"","code":"whittle_loglik_grad(c, B, periodogram)"},{"path":"https://astfalckl.github.io/bskernel/reference/whittle_loglik_grad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gradient of Whittle Log-Likelihood — whittle_loglik_grad","text":"c Coefficient vector spectral basis expansion. B Design matrix (rows = frequencies, cols = basis functions). periodogram Vector periodogram values.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/whittle_loglik_grad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gradient of Whittle Log-Likelihood — whittle_loglik_grad","text":"numeric vector: gradient respect c.","code":""}]
