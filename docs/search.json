[{"path":"https://astfalckl.github.io/bskernel/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Lachlan Astfalck Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://astfalckl.github.io/bskernel/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Lachlan Astfalck. Author, maintainer.","code":""},{"path":"https://astfalckl.github.io/bskernel/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Astfalck L (2025). “Universal approximation auto-covariance functions via spline kernels.” arXiv:2506.21953.","code":"@Article{,   title = {Universal approximation of auto-covariance functions via spline kernels},   author = {Lachlan Astfalck},   journal = {arXiv:2506.21953},   year = {2025}, }"},{"path":"https://astfalckl.github.io/bskernel/index.html","id":"bskernel","dir":"","previous_headings":"","what":"Flexible Auto-covariance Construction via Spline Kernels","title":"Flexible Auto-covariance Construction via Spline Kernels","text":"package provides flexible auto-covariance kernel construction via inverse Fourier transforms B-spline bases, well handy tools optimisation. Please note, found GitHub repo, please navigate pkgdown page.","code":""},{"path":"https://astfalckl.github.io/bskernel/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Flexible Auto-covariance Construction via Spline Kernels","text":"can install development version bskernel GitHub ","code":"devtools::install_github(\"astfalckl/bskernel\")"},{"path":"https://astfalckl.github.io/bskernel/index.html","id":"quickstart","dir":"","previous_headings":"","what":"Quickstart","title":"Flexible Auto-covariance Construction via Spline Kernels","text":"bskernel package provides tools constructing auto-covariance functions via inverse Fourier transform B-spline basis functions spectral domain. workhorse functions build_bspline_design_matrix reconstruct_acf minimal example recreates Figure 1 paper. Note reconstruct_acf() designed summate bases expansion, iteratively select basis member. spline acf bases plotted (plotting code suppressed, see .Rmd file).","code":"library(bskernel)  k <- 1  knots <- seq(-0.125, 0.5, 0.125) omega <- seq(0, 0.5, length.out = 100) tau <- seq(0, 7.5, length = 100)  spline_bases <- build_bspline_design_matrix(omega, knots, k)  acfs <- sapply(1:4, function(i){   idx <- rep(0, 4)   idx[i] <- 1   Re(reconstruct_acf(idx, knots, k, tau)) })"},{"path":"https://astfalckl.github.io/bskernel/index.html","id":"articles","dir":"","previous_headings":"","what":"Articles","title":"Flexible Auto-covariance Construction via Spline Kernels","text":"written number tutorials: Function reference","code":""},{"path":"https://astfalckl.github.io/bskernel/index.html","id":"citation","dir":"","previous_headings":"Articles","what":"Citation","title":"Flexible Auto-covariance Construction via Spline Kernels","text":"package accompanies paper LC Astfalck. (2025). ‘’Universal approximation auto-covariance functions via spline kernels’’. Submitted Journal Royal Statistical Society: Series B. [Available .]","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bskernel-package.html","id":null,"dir":"Reference","previous_headings":"","what":"bskernel: Flexible Auto-covariance Construction via Spline Kernels — bskernel-package","title":"bskernel: Flexible Auto-covariance Construction via Spline Kernels — bskernel-package","text":"package provides flexible auto-covariance kernel construction via inverse Fourier transforms B-spline bases, well handy tools optimisation. accompanies paper ''Universal approximation auto-covariance functions via spline kernels''.","code":""},{"path":[]},{"path":"https://astfalckl.github.io/bskernel/reference/bskernel-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bskernel: Flexible Auto-covariance Construction via Spline Kernels — bskernel-package","text":"Maintainer: Lachlan Astfalck lachlan.astfalck@uwa.edu.au (ORCID)","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_alpha_rule.html","id":null,"dir":"Reference","previous_headings":"","what":"Alpha Coefficients for Truncated Power Expansion of B-spline Basis — bspline_alpha_rule","title":"Alpha Coefficients for Truncated Power Expansion of B-spline Basis — bspline_alpha_rule","text":"Computes coefficients \\(\\alpha_j\\) truncated power representation B-spline basis function degree k, valid k = 0, 1, 2. coefficients allow basis function expressed linear combination truncated power functions relevant knot interval.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_alpha_rule.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Alpha Coefficients for Truncated Power Expansion of B-spline Basis — bspline_alpha_rule","text":"","code":"bspline_alpha_rule(knots, i, k)"},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_alpha_rule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Alpha Coefficients for Truncated Power Expansion of B-spline Basis — bspline_alpha_rule","text":"knots numeric vector knots. integer index indicating position knot sequence compute coefficients. k degree B-spline basis function (must 0, 1, 2).","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_alpha_rule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Alpha Coefficients for Truncated Power Expansion of B-spline Basis — bspline_alpha_rule","text":"numeric vector coefficients \\(\\alpha_j\\) truncated power expansion.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_alpha_rule.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Alpha Coefficients for Truncated Power Expansion of B-spline Basis — bspline_alpha_rule","text":": k = 0, returns \\((1, -1)\\) characteristic function single interval. k = 1, returns 3-vector corresponding linear B-spline basis functions. k = 2, returns 4-vector quadratic B-spline basis functions. function throws error required knot difference zero (.e. repeated knots), k > 2.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_alpha_rule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Alpha Coefficients for Truncated Power Expansion of B-spline Basis — bspline_alpha_rule","text":"","code":"knots <- c(0, 1, 2, 3, 4, 5) bspline_alpha_rule(knots, i = 1, k = 1) #> [1]  1 -2  1"},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_normalisation_constant.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalisation Constant for Truncated Power Expansion of B-spline — bspline_normalisation_constant","title":"Normalisation Constant for Truncated Power Expansion of B-spline — bspline_normalisation_constant","text":"Computes scaling factor required normalise B-spline basis function, using truncated power expansion, basis integrates 1 support.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_normalisation_constant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalisation Constant for Truncated Power Expansion of B-spline — bspline_normalisation_constant","text":"","code":"bspline_normalisation_constant(knots, i, k)"},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_normalisation_constant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalisation Constant for Truncated Power Expansion of B-spline — bspline_normalisation_constant","text":"knots numeric vector knots. integer index indicating position knot sequence compute coefficients. k degree B-spline basis function (must 0, 1, 2).","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_normalisation_constant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalisation Constant for Truncated Power Expansion of B-spline — bspline_normalisation_constant","text":"numeric scalar giving inverse integral truncated power representation - .e., multiplicative constant \\(Z^{-1}\\) makes basis function integrate 1.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_normalisation_constant.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalisation Constant for Truncated Power Expansion of B-spline — bspline_normalisation_constant","text":"function uses bspline_alpha_rule compute coefficients \\(\\alpha_j\\) truncated power expansion, integrates support.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/bspline_normalisation_constant.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalisation Constant for Truncated Power Expansion of B-spline — bspline_normalisation_constant","text":"","code":"knots <- c(0, 1, 2, 3, 4, 5) bspline_normalisation_constant(knots, i = 1, k = 1) #> [1] 1"},{"path":"https://astfalckl.github.io/bskernel/reference/build_bspline_design_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Construct a B-spline Design Matrix — build_bspline_design_matrix","title":"Construct a B-spline Design Matrix — build_bspline_design_matrix","text":"Builds B-spline basis matrix evaluating normalised truncated power B-spline basis function input locations omega. column matrix corresponds one basis function.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/build_bspline_design_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Construct a B-spline Design Matrix — build_bspline_design_matrix","text":"","code":"build_bspline_design_matrix(omega, knots, k)"},{"path":"https://astfalckl.github.io/bskernel/reference/build_bspline_design_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Construct a B-spline Design Matrix — build_bspline_design_matrix","text":"omega numeric vector input locations evaluate basis function. knots numeric vector knots. k degree B-spline basis function (must 0, 1, 2).","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/build_bspline_design_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Construct a B-spline Design Matrix — build_bspline_design_matrix","text":"numeric matrix length(omega) rows length(knots) - k - 1 columns, column normalised B-spline basis function evaluated omega.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/build_bspline_design_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Construct a B-spline Design Matrix — build_bspline_design_matrix","text":"number basis functions given length(knots) - k - 1. column matrix computed using evaluate_bspline_basis.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/build_bspline_design_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Construct a B-spline Design Matrix — build_bspline_design_matrix","text":"","code":"knots <- c(0, 1, 2, 3, 4, 5) omega <- seq(0, 5, length.out = 100) B <- build_bspline_design_matrix(omega, knots, k = 1) matplot(omega, B, type = \"l\", lty = 1, col = 1:ncol(B))"},{"path":"https://astfalckl.github.io/bskernel/reference/evaluate_bspline_basis.html","id":null,"dir":"Reference","previous_headings":"","what":"Evaluate a Normalised B-spline Basis Function — evaluate_bspline_basis","title":"Evaluate a Normalised B-spline Basis Function — evaluate_bspline_basis","text":"Evaluates B-spline basis function degree k, indexed , vector input locations omega, using truncated power expansion. result scaled basis integrates 1 support.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/evaluate_bspline_basis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Evaluate a Normalised B-spline Basis Function — evaluate_bspline_basis","text":"","code":"evaluate_bspline_basis(omega, knots, i, k)"},{"path":"https://astfalckl.github.io/bskernel/reference/evaluate_bspline_basis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Evaluate a Normalised B-spline Basis Function — evaluate_bspline_basis","text":"omega numeric vector input locations evaluate basis function. knots numeric vector knots. integer index indicating position knot sequence compute coefficients. k degree B-spline basis function (must 0, 1, 2).","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/evaluate_bspline_basis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Evaluate a Normalised B-spline Basis Function — evaluate_bspline_basis","text":"numeric vector length omega, giving evaluated basis function values.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/evaluate_bspline_basis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Evaluate a Normalised B-spline Basis Function — evaluate_bspline_basis","text":"","code":"knots <- c(0, 1, 2, 3, 4, 5) omega <- seq(0, 5, length.out = 100) y <- evaluate_bspline_basis(omega, knots, i = 1, k = 1) plot(omega, y, type = \"l\")"},{"path":"https://astfalckl.github.io/bskernel/reference/inverse_fourier_truncated_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Inverse Fourier Transform of a B-spline Basis Function — inverse_fourier_truncated_power","title":"Inverse Fourier Transform of a B-spline Basis Function — inverse_fourier_truncated_power","text":"Computes inverse Fourier transform B-spline basis function degree k, indexed , using truncated power expansion representation. used construct spectral representations B-spline basis functions.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/inverse_fourier_truncated_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inverse Fourier Transform of a B-spline Basis Function — inverse_fourier_truncated_power","text":"","code":"inverse_fourier_truncated_power(knots, i, k, tau)"},{"path":"https://astfalckl.github.io/bskernel/reference/inverse_fourier_truncated_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inverse Fourier Transform of a B-spline Basis Function — inverse_fourier_truncated_power","text":"knots numeric vector knots. integer index indicating position knot sequence compute coefficients. k degree B-spline basis function (must 0, 1, 2). tau numeric vector frequencies evaluate inverse Fourier transform.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/inverse_fourier_truncated_power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inverse Fourier Transform of a B-spline Basis Function — inverse_fourier_truncated_power","text":"complex-valued vector length tau, giving inverse Fourier transform basis function evaluated frequency.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/inverse_fourier_truncated_power.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Inverse Fourier Transform of a B-spline Basis Function — inverse_fourier_truncated_power","text":"","code":"knots <- c(0, 1, 2, 3, 4, 5) tau <- seq(-5, 5, length.out = 200) rho <- inverse_fourier_truncated_power(knots, i = 1, k = 1, tau = tau) plot(tau, Re(rho), type = \"l\", main = \"Real part of Fourier transform\")"},{"path":"https://astfalckl.github.io/bskernel/reference/plot_bspline_basis_ggplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot B-spline Basis Functions Using ggplot2 — plot_bspline_basis_ggplot","title":"Plot B-spline Basis Functions Using ggplot2 — plot_bspline_basis_ggplot","text":"Plots B-spline design matrix using ggplot2, optionally applying log scales x y axes. column matrix treated separate basis function.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/plot_bspline_basis_ggplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot B-spline Basis Functions Using ggplot2 — plot_bspline_basis_ggplot","text":"","code":"plot_bspline_basis_ggplot(   omega,   design_matrix,   k = NULL,   logx = FALSE,   logy = FALSE )"},{"path":"https://astfalckl.github.io/bskernel/reference/plot_bspline_basis_ggplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot B-spline Basis Functions Using ggplot2 — plot_bspline_basis_ggplot","text":"omega numeric vector input values basis evaluated. design_matrix numeric matrix (rows = length omega, columns = basis functions). k (Optional) degree B-spline basis. Used labelling. logx Logical; TRUE, plot x-axis log10 scale. logy Logical; TRUE, plot y-axis log10 scale.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/plot_bspline_basis_ggplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot B-spline Basis Functions Using ggplot2 — plot_bspline_basis_ggplot","text":"ggplot object displaying basis function line.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/plot_bspline_basis_ggplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot B-spline Basis Functions Using ggplot2 — plot_bspline_basis_ggplot","text":"","code":"knots <- c(0, 1, 2, 3, 4, 5) omega <- seq(0.1, 5, length.out = 100) B <- build_bspline_design_matrix(omega, knots, k = 1) plot_bspline_basis_ggplot(omega, B, k = 1) #> Error in theme(legend.position = \"none\"): could not find function \"theme\""},{"path":"https://astfalckl.github.io/bskernel/reference/reconstruct_acf.html","id":null,"dir":"Reference","previous_headings":"","what":"Reconstruct the Autocovariance Function (ACF) from Spectral Coefficients — reconstruct_acf","title":"Reconstruct the Autocovariance Function (ACF) from Spectral Coefficients — reconstruct_acf","text":"Given set spectral coefficients B-spline basis, function reconstructs autocovariance function via inverse Fourier transform.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/reconstruct_acf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reconstruct the Autocovariance Function (ACF) from Spectral Coefficients — reconstruct_acf","text":"","code":"reconstruct_acf(c, knots, k, tau)"},{"path":"https://astfalckl.github.io/bskernel/reference/reconstruct_acf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reconstruct the Autocovariance Function (ACF) from Spectral Coefficients — reconstruct_acf","text":"c numeric vector spectral coefficients (length equals number basis functions). knots numeric vector knots. k degree B-spline basis function (must 0, 1, 2). tau numeric vector frequencies evaluate inverse Fourier transform.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/reconstruct_acf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reconstruct the Autocovariance Function (ACF) from Spectral Coefficients — reconstruct_acf","text":"real-valued numeric vector length tau, representing reconstructed autocovariance.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/reconstruct_acf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Reconstruct the Autocovariance Function (ACF) from Spectral Coefficients — reconstruct_acf","text":"function computes weighted sum inverse Fourier transforms B-spline basis functions. zero-lag autocovariance (tau[1]) manually set total spectral mass sum(c), ensuring numerical consistency.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/reconstruct_acf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Reconstruct the Autocovariance Function (ACF) from Spectral Coefficients — reconstruct_acf","text":"","code":"knots <- c(0, 1, 2, 3, 4, 5) c <- c(1, 0.5, 0.2) tau <- seq(0, 10, length.out = 200) acf <- reconstruct_acf(c, knots, k = 1, tau = tau) plot(tau, acf, type = \"l\") #> Warning: imaginary parts discarded in coercion"},{"path":"https://astfalckl.github.io/bskernel/reference/truncated_power.html","id":null,"dir":"Reference","previous_headings":"","what":"Truncated Power Function — truncated_power","title":"Truncated Power Function — truncated_power","text":"Computes truncated power basis function \\((x - \\kappa)^k_+\\), zero values x < kappa equal \\((x - \\kappa)^k_+\\) otherwise. Commonly used spline basis construction.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/truncated_power.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Truncated Power Function — truncated_power","text":"","code":"truncated_power(x, kappa, k)"},{"path":"https://astfalckl.github.io/bskernel/reference/truncated_power.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Truncated Power Function — truncated_power","text":"x numeric vector input values. kappa numeric scalar specifying truncation point. k non-negative integer specifying exponent.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/truncated_power.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Truncated Power Function — truncated_power","text":"numeric vector length x, element transformed truncated power function.","code":""},{"path":"https://astfalckl.github.io/bskernel/reference/truncated_power.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Truncated Power Function — truncated_power","text":"","code":"x <- seq(0, 2, by = 0.1) truncated_power(x, kappa = 1, k = 2) #>  [1] 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.00 0.01 0.04 0.09 0.16 #> [16] 0.25 0.36 0.49 0.64 0.81 1.00"}]
